<render>

	<targets>
		<texture name="depth"			format="GL_DEPTH_COMPONENT32F" />
		<texture name="normals"			format="GL_RGBA16F" />
		<texture name="lights_diffuse"	format="GL_R11F_G11F_B10F" />
		<texture name="lights_specular"	format="GL_R11F_G11F_B10F" />
		<texture name="HDR"				format="GL_R11F_G11F_B10F" />
		<texture name="bloom1"			format="GL_R11F_G11F_B10F" size_divisor="4" />
		<texture name="bloom2"			format="GL_R11F_G11F_B10F" size_divisor="4" />
	</targets>

	<pipeline>

		<technique name="geometry">
			<depth mask="GL_TRUE" func="GL_LESS" />
			<pass name="simple">
				<shader name="geometry_pass.vert" type="GL_VERTEX_SHADER" />
				<shader name="geometry_pass.frag" type="GL_FRAGMENT_SHADER" />
				<output texture="depth" attachment="GL_DEPTH_ATTACHMENT" />
				<output texture="normals" attachment="GL_COLOR_ATTACHMENT0" />
			</pass>
			<pass name="normal_map">
				<shader name="geometry_normalmap_pass.vert" type="GL_VERTEX_SHADER" />
				<shader name="geometry_normalmap_pass.frag" type="GL_FRAGMENT_SHADER" />
				<output texture="depth" attachment="GL_DEPTH_ATTACHMENT" />
				<output texture="normals" attachment="GL_COLOR_ATTACHMENT0" />
			</pass>
		</technique>

		<technique name="lights">
			<blend sfactor="GL_ONE" equation="GL_FUNC_ADD" dfactor="GL_ONE" />
			<pass name="directional">
				<shader name="directionnal_light.vert" type="GL_VERTEX_SHADER" />
				<shader name="directionnal_light.frag" type="GL_FRAGMENT_SHADER" />
				<output texture="lights_diffuse" attachment="GL_COLOR_ATTACHMENT0" />
				<output texture="lights_specular" attachment="GL_COLOR_ATTACHMENT1" />
			</pass>
		</technique>

		<technique name="bloom">
			<pass name="bright">
				<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
				<shader name="fullscreen_bright.frag" type="GL_FRAGMENT_SHADER" />
				<output texture="bloom1" attachment="GL_COLOR_ATTACHMENT0" />
			</pass>
			<pass name="horizontal_blur">
				<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
				<shader name="gaussian_blur_h.frag" type="GL_FRAGMENT_SHADER" />
				<output texture="bloom2" attachment="GL_COLOR_ATTACHMENT0" />
			</pass>
			<pass name="vertical_blur">
				<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
				<shader name="gaussian_blur_v.frag" type="GL_FRAGMENT_SHADER" />
				<output texture="bloom1" attachment="GL_COLOR_ATTACHMENT0" />
			</pass>
		</technique>

		<technique name="compose">
			<depth mask="GL_FALSE" func="GL_EQUAL" />
			<pass name="default">
				<shader name="full.vert" type="GL_VERTEX_SHADER" />
				<shader name="full.frag" type="GL_FRAGMENT_SHADER" />
				<output texture="depth" attachment="GL_DEPTH_ATTACHMENT" /> <!-- early z-cull -->
				<output texture="HDR" attachment="GL_COLOR_ATTACHMENT0" />
			</pass>
		</technique>

		<technique name="tonemapping">
			<pass name="with_burnout">
				<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
				<shader name="tonemapping.frag" type="GL_FRAGMENT_SHADER" />
			</pass>
		</technique>

		<technique name="tonemapping">
			<pass name="with_burnout">
				<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
				<shader name="tonemapping.frag" type="GL_FRAGMENT_SHADER" />
			</pass>
		</technique>

		<technique name="blend">
			<blend sfactor="GL_ONE" equation="GL_FUNC_ADD" dfactor="GL_ONE" />
			<pass name="bloom">
				<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
				<shader name="fullscreen_color.frag" type="GL_FRAGMENT_SHADER" />
			</pass>
		</technique>

		<technique name="debug">
			<pass name="depth">
				<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
				<shader name="fullscreen_depth.frag" type="GL_FRAGMENT_SHADER" />
			</pass>
			<pass name="normal">
				<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
				<shader name="fullscreen_normal.frag" type="GL_FRAGMENT_SHADER" />
			</pass>
			<pass name="color">
				<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
				<shader name="fullscreen_color.frag" type="GL_FRAGMENT_SHADER" />
			</pass>
			<pass name="luminance">
				<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
				<shader name="fullscreen_exp.frag" type="GL_FRAGMENT_SHADER" />
			</pass>
		</technique>

	</pipeline>

</render>
