<render>

	<targets>
		<texture name="depth" format="GL_DEPTH_COMPONENT32F" />
		<texture name="normals" format="GL_RGBA16F" />
		<texture name="lights_diffuse" format="GL_R11F_G11F_B10F" />
		<texture name="lights_specular" format="GL_R11F_G11F_B10F" />
		<texture name="HDR" format="GL_R11F_G11F_B10F" />
		<texture name="bloom1" format="GL_R11F_G11F_B10F" size_divisor="4" />
		<texture name="bloom2" format="GL_R11F_G11F_B10F" size_divisor="4" />
		<texture name="pickbuffer" format="GL_R32UI" />
		<texture name="luminance1" format="GL_RG16F" />
		<texture name="luminance2" format="GL_RG16F" />
	</targets>

	<pipelines>
		<pipeline name="pickbuffer">
			<depth mask="GL_FALSE" func="GL_EQUAL" />
			<shader name="pickbuffer.vert" type="GL_VERTEX_SHADER" />
			<shader name="pickbuffer.frag" type="GL_FRAGMENT_SHADER" />
		</pipeline>
		<pipeline name="shadow_map">
			<enable cap="GL_POLYGON_OFFSET_FILL" />
			<depth mask="GL_TRUE" func="GL_LESS" />
			<shader name="depth_only.vert" type="GL_VERTEX_SHADER" />
			<shader name="depth_only.frag" type="GL_FRAGMENT_SHADER" />
		</pipeline>
		<pipeline name="bbox">
			<shader name="bbox.vert" type="GL_VERTEX_SHADER" />
			<shader name="bbox.geom" type="GL_GEOMETRY_SHADER" />
			<shader name="bbox.frag" type="GL_FRAGMENT_SHADER" />
		</pipeline>
		<pipeline name="geometry_simple">
			<depth mask="GL_TRUE" func="GL_LESS" />
			<shader name="geometry_pass.vert" type="GL_VERTEX_SHADER" />
			<shader name="geometry_pass.frag" type="GL_FRAGMENT_SHADER" />
		</pipeline>
		<pipeline name="geometry_normalmap">
			<depth mask="GL_TRUE" func="GL_LESS" />
			<shader name="geometry_normalmap_pass.vert" type="GL_VERTEX_SHADER" />
			<shader name="geometry_normalmap_pass.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="normalMap" min_filter="GL_LINEAR" mag_filter="GL_LINEAR" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="lights_directional">
			<blend sfactor="GL_ONE" equation="GL_FUNC_ADD" dfactor="GL_ONE" />
			<shader name="directionnal_light.vert" type="GL_VERTEX_SHADER" />
			<shader name="directionnal_light.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="depthSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
			<sampler name="normalSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="bloom_bright">
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="fullscreen_bright.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="bloom_horizontal_blur">
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="gaussian_blur_h.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="bloom_vertical_blur">
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="gaussian_blur_v.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="compose">
			<depth mask="GL_FALSE" func="GL_EQUAL" />
			<shader name="full.vert" type="GL_VERTEX_SHADER" />
			<shader name="full.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="diffuseSampler" min_filter="GL_LINEAR" mag_filter="GL_LINEAR" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
			<sampler name="specularSampler" min_filter="GL_LINEAR" mag_filter="GL_LINEAR" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
			<sampler name="diffuseLightSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
			<sampler name="specularLightSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
			<sampler name="shadowMap" min_filter="GL_LINEAR" mag_filter="GL_LINEAR" wrap_s="GL_CLAMP_TO_BORDER" wrap_t="GL_CLAMP_TO_BORDER" compare_mode="GL_COMPARE_REF_TO_TEXTURE" compare_func="GL_LEQUAL" />
		</pipeline>
		<pipeline name="fog_simple">
			<!-- dst = src.a * dst + 1 * src.rgb -->
			<!-- src.a : Extinction ; src.rgb = Scattering -->
			<blend sfactor="GL_ONE" equation="GL_FUNC_ADD" dfactor="GL_SRC_ALPHA" />
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="fog_simple.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
			<sampler name="depthMapSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="fog_scattering">
			<!-- dst = src.a * dst + 1 * src.rgb -->
			<!-- src.a : Extinction ; src.rgb = Scattering -->
			<blend sfactor="GL_ONE" equation="GL_FUNC_ADD" dfactor="GL_SRC_ALPHA" />
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="fog_scattering.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
			<sampler name="depthMapSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="fog_godrays">
			<!-- dst = src.a * dst + 1 * src.rgb -->
			<!-- src.a : Extinction ; src.rgb = Scattering -->
			<blend sfactor="GL_ONE" equation="GL_FUNC_ADD" dfactor="GL_SRC_ALPHA" />
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="fog_godrays.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
			<sampler name="depthMapSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="luminance_conversion">
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="fullscreen_luminance.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_LINEAR" mag_filter="GL_LINEAR" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="average_luminance">
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="fullscreen_luminance_mean.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_LINEAR" mag_filter="GL_LINEAR" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="tonemapping">
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="tonemapping.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="bloom">
			<blend sfactor="GL_ONE" equation="GL_FUNC_ADD" dfactor="GL_ONE" />
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="fullscreen_color.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_LINEAR" mag_filter="GL_LINEAR" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="debug_depth">
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="fullscreen_depth.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="debug_normal">
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="fullscreen_normal.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="debug_color">
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="fullscreen_color.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
		<pipeline name="debug_luminance">
			<shader name="fullscreen.vert" type="GL_VERTEX_SHADER" />
			<shader name="fullscreen_exp.frag" type="GL_FRAGMENT_SHADER" />
			<sampler name="texSampler" min_filter="GL_NEAREST" mag_filter="GL_NEAREST" wrap_s="GL_CLAMP_TO_EDGE" wrap_t="GL_CLAMP_TO_EDGE" />
		</pipeline>
	</pipelines>

	<techniques>

		<technique name="picking">
			<pass name="default">
				<pipeline name="pickbuffer" />
				<output texture="depth" /> <!-- early z-cull -->
				<output texture="pickbuffer" />
			</pass>
		</technique>

		<technique name="bbox">
			<pass name="default">
				<pipeline name="bbox" />
			</pass>
		</technique>

		<technique name="geometry">
			<pass name="simple">
				<pipeline name="geometry_simple" />
				<output texture="depth" />
				<output texture="normals" />
			</pass>
			<pass name="normal_map">
				<pipeline name="geometry_normalmap" />
				<output texture="depth" />
				<output texture="normals" />
			</pass>
		</technique>

		<technique name="lights">
			<pass name="directional">
				<pipeline name="lights_directional" />
				<output texture="lights_diffuse" />
				<output texture="lights_specular" />
			</pass>
		</technique>

		<technique name="bloom">
			<pass name="bright">
				<pipeline name="bloom_bright" />
				<output texture="bloom1" />
			</pass>
			<pass name="horizontal_blur">
				<pipeline name="bloom_horizontal_blur" />
				<output texture="bloom2" />
			</pass>
			<pass name="vertical_blur">
				<pipeline name="bloom_vertical_blur" />
				<output texture="bloom1" />
			</pass>
		</technique>

		<technique name="compose">
			<pass name="default">
				<pipeline name="compose" />
				<output texture="depth" /> <!-- early z-cull -->
				<output texture="HDR" />
			</pass>
		</technique>

		<technique name="fog">
			<pass name="simple">
				<pipeline name="fog_simple" />
				<output texture="HDR" />
			</pass>
			<pass name="scattering">
				<pipeline name="fog_scattering" />
				<output texture="HDR" />
			</pass>
			<pass name="godrays">
				<pipeline name="fog_godrays" />
				<output texture="HDR" />
			</pass>
		</technique>

		<technique name="tonemapping">
			<pass name="to_luminance">
				<pipeline name="luminance_conversion" />
				<output texture="luminance1" />
			</pass>
			<pass name="with_burnout">
				<pipeline name="tonemapping" />
			</pass>
		</technique>

		<technique name="blend">
			<pass name="bloom">
				<pipeline name="bloom" />
			</pass>
		</technique>

		<technique name="debug">
			<pass name="depth">
				<pipeline name="debug_depth" />
			</pass>
			<pass name="normal">
				<pipeline name="debug_normal" />
			</pass>
			<pass name="color">
				<pipeline name="debug_color" />
			</pass>
			<pass name="luminance">
				<pipeline name="debug_luminance" />
			</pass>
		</technique>

	</techniques>

</render>
