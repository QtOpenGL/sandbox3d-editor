#pragma once

#if HAVE_OPENGL
#	define E(NAME,GL,VK) NAME = GL
#endif // HAVE_OPENGL

#if HAVE_VULKAN
#define E(NAME,GL,VK) NAME = VK
#endif // HAVE_VULKAN

namespace RHI
{

enum PrimitiveType
{
	E(PRIMITIVE_POINT_LIST, GL_POINTS, VK_PRIMITIVE_TOPOLOGY_POINT_LIST),
	E(PRIMITIVE_LINE_LIST, GL_LINES, VK_PRIMITIVE_TOPOLOGY_LINE_LIST),
	E(PRIMITIVE_LINE_STRIP, GL_LINE_STRIP, VK_PRIMITIVE_TOPOLOGY_LINE_STRIP),
	E(PRIMITIVE_TRIANGLE_LIST, GL_TRIANGLES, VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST),
	E(PRIMITIVE_TRIANGLE_STRIP, GL_TRIANGLE_STRIP, VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP),
	E(PRIMITIVE_TRIANGLE_FAN, GL_TRIANGLE_FAN, VK_PRIMITIVE_TOPOLOGY_TRIANGLE_FAN),
	E(PRIMITIVE_LINE_LIST_WITH_ADJACENCY, GL_LINES_ADJACENCY, VK_PRIMITIVE_TOPOLOGY_LINE_LIST_WITH_ADJACENCY),
	E(PRIMITIVE_LINE_STRIP_WITH_ADJACENCY, GL_LINE_STRIP_ADJACENCY, VK_PRIMITIVE_TOPOLOGY_LINE_STRIP_WITH_ADJACENCY),
	E(PRIMITIVE_TRIANGLE_LIST_WITH_ADJACENCY, GL_TRIANGLES_ADJACENCY, VK_PRIMITIVE_TOPOLOGY_TRIANGLE_LIST_WITH_ADJACENCY),
	E(PRIMITIVE_TRIANGLE_STRIP_WITH_ADJACENCY, GL_TRIANGLE_STRIP_ADJACENCY, VK_PRIMITIVE_TOPOLOGY_TRIANGLE_STRIP_WITH_ADJACENCY),
	E(PRIMITIVE_PATCH_LIST, GL_PATCHES,	VK_PRIMITIVE_TOPOLOGY_PATCH_LIST),
};

enum CompareOp
{
	E(COMPARE_OP_NEVER, GL_NEVER, VK_COMPARE_OP_NEVER),
	E(COMPARE_OP_LESS, GL_LESS, VK_COMPARE_OP_LESS),
	E(COMPARE_OP_EQUAL, GL_EQUAL, VK_COMPARE_OP_EQUAL),
	E(COMPARE_OP_LESS_OR_EQUAL, GL_LEQUAL, VK_COMPARE_OP_LESS_OR_EQUAL),
	E(COMPARE_OP_GREATER, GL_GREATER, VK_COMPARE_OP_GREATER),
	E(COMPARE_OP_NOT_EQUAL, GL_NOTEQUAL, VK_COMPARE_OP_NOT_EQUAL),
	E(COMPARE_OP_GREATER_OR_EQUAL, GL_GEQUAL, VK_COMPARE_OP_GREATER_OR_EQUAL),
	E(COMPARE_OP_ALWAYS, GL_ALWAYS, VK_COMPARE_OP_ALWAYS),
};

}
